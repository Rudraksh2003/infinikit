{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "Intro",
  "type": "registry:component",
  "title": "Intro",
  "description": "Intro.",
  "files": [
    {
      "path": "registry/Infinikit/Heading/Intro.tsx",
      "content": "import React, { ReactNode, useEffect } from \"react\";\n\ninterface HeadingProps {\n  children: ReactNode;\n  className?: string;\n}\n\nconst Heading = ({ children, className = \"\" }: HeadingProps) => {\n  // Create a unique ID for this instance's keyframes to avoid conflicts\n  const uniqueId = React.useId().replace(/:/g, \"\");\n  const animationName = `neonGlow-${uniqueId}`;\n  \n  // Inject styles into document head to ensure they persist\n  useEffect(() => {\n    const styleId = `neon-style-${uniqueId}`;\n    \n    // Check if style already exists\n    if (document.getElementById(styleId)) {\n      return;\n    }\n    \n    const style = document.createElement('style');\n    style.id = styleId;\n    style.textContent = `\n      @keyframes ${animationName} {\n        0% {\n          box-shadow: \n            0 0 5px rgba(255, 105, 180, 0.8),\n            0 0 10px rgba(255, 223, 0, 0.6),\n            0 0 15px rgba(64, 224, 208, 0.4);\n        }\n        50% {\n          box-shadow: \n            0 0 10px rgba(255, 105, 180, 1),\n            0 0 20px rgba(255, 223, 0, 0.8),\n            0 0 30px rgba(64, 224, 208, 0.6);\n        }\n        100% {\n          box-shadow: \n            0 0 5px rgba(255, 105, 180, 0.8),\n            0 0 10px rgba(255, 223, 0, 0.6),\n            0 0 15px rgba(64, 224, 208, 0.4);\n        }\n      }\n      \n      .neon-underline-${uniqueId} {\n        animation: ${animationName} 2s ease-in-out infinite;\n        transition: all 0.3s ease;\n      }\n      \n      .neon-underline-${uniqueId}:hover {\n        transform: scaleY(2);\n        box-shadow: \n          0 0 15px rgba(255, 105, 180, 1),\n          0 0 25px rgba(255, 223, 0, 1),\n          0 0 35px rgba(64, 224, 208, 0.8) !important;\n      }\n      \n      @media (prefers-color-scheme: dark) {\n        @keyframes ${animationName} {\n          0% {\n            box-shadow: \n              0 0 8px rgba(255, 105, 180, 0.9),\n              0 0 15px rgba(255, 223, 0, 0.7),\n              0 0 20px rgba(64, 224, 208, 0.5);\n          }\n          50% {\n            box-shadow: \n              0 0 15px rgba(255, 105, 180, 1),\n              0 0 25px rgba(255, 223, 0, 0.9),\n              0 0 35px rgba(64, 224, 208, 0.7);\n          }\n          100% {\n            box-shadow: \n              0 0 8px rgba(255, 105, 180, 0.9),\n              0 0 15px rgba(255, 223, 0, 0.7),\n              0 0 20px rgba(64, 224, 208, 0.5);\n          }\n        }\n      }\n      \n      @media (prefers-color-scheme: light) {\n        @keyframes ${animationName} {\n          0% {\n            box-shadow: \n              0 0 5px rgba(236, 72, 153, 0.6),\n              0 0 10px rgba(202, 138, 4, 0.4),\n              0 0 15px rgba(37, 99, 235, 0.3);\n          }\n          50% {\n            box-shadow: \n              0 0 10px rgba(236, 72, 153, 0.8),\n              0 0 18px rgba(202, 138, 4, 0.6),\n              0 0 25px rgba(37, 99, 235, 0.5);\n          }\n          100% {\n            box-shadow: \n              0 0 5px rgba(236, 72, 153, 0.6),\n              0 0 10px rgba(202, 138, 4, 0.4),\n              0 0 15px rgba(37, 99, 235, 0.3);\n          }\n        }\n      }\n    `;\n    \n    document.head.appendChild(style);\n    \n    // Cleanup function\n    return () => {\n      const existingStyle = document.getElementById(styleId);\n      if (existingStyle) {\n        existingStyle.remove();\n      }\n    };\n  }, [animationName, uniqueId]);\n  \n  return (\n    <h1\n      className={`relative inline-block text-3xl font-bold cursor-pointer group ${className}`}\n    >\n      {children}\n      <span\n        className={`neon-underline-${uniqueId} absolute left-0 bottom-0 w-full h-1 bg-gradient-to-r from-pink-500 via-yellow-500 to-blue-500 transition-all duration-500 scale-x-0 group-hover:scale-x-100 origin-left rounded-sm`}\n      />\n    </h1>\n  );\n};\n\nexport default Heading;\n/*\n// Demo component\nexport default function NeonHeadingDemo() {\n  return (\n    <div className=\"flex flex-col items-center justify-center p-8 space-y-8 min-h-screen bg-gray-100 dark:bg-gray-900\">\n      <Heading>Welcome to Neon Heading</Heading>\n      <Heading className=\"text-blue-600 dark:text-blue-400\">Customizable Text Color</Heading>\n      <Heading className=\"text-xl\">Different Size</Heading>\n      <p className=\"text-gray-600 dark:text-gray-300 mt-8\">\n        Hover over any heading to see the full neon effect\n      </p>\n    </div>\n  );\n}*/",
      "type": "registry:component"
    }
  ]
}