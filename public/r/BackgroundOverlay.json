{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "BackgroundOverlay",
  "type": "registry:component",
  "title": "BackgroundOverlay",
  "description": "BackgroundOverlay.",
  "files": [
    {
      "path": "registry/Infinikit/BackgroundOverlay/BackgroundOverlay.tsx",
      "content": "\n// Updated Overlay component without any buttons, letting the user add their own\nconst Overlay = ({ \n  src, \n  mediaType = 'image',\n  opacity = 30,\n  position = 'center',\n  size = 'cover',\n  blur = false,\n  blurAmount = 3,\n  darkOverlay = false,\n  darkOverlayOpacity = 50,\n  height = 'screen',\n  className = '',\n  children \n}) => {\n  // Convert position to Tailwind classes\n  const positionClasses = {\n    'center': 'top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2',\n    'top': 'top-0 left-1/2 -translate-x-1/2',\n    'bottom': 'bottom-0 left-1/2 -translate-x-1/2',\n    'left': 'left-0 top-1/2 -translate-y-1/2',\n    'right': 'right-0 top-1/2 -translate-y-1/2',\n    'top-left': 'top-0 left-0',\n    'top-right': 'top-0 right-0',\n    'bottom-left': 'bottom-0 left-0',\n    'bottom-right': 'bottom-0 right-0',\n  };\n\n  // Convert size to Tailwind classes\n  const sizeClasses = {\n    'cover': 'object-cover',\n    'contain': 'object-contain',\n    'auto': 'object-none',\n    'fill': 'object-fill',\n  };\n\n  // Height classes\n  const heightClasses = {\n    'screen': 'h-screen',\n    'auto': 'h-auto',\n    'full': 'h-full',\n  };\n\n  // Generate blur class (using standard Tailwind classes)\n  const blurClass = blur ? `blur-${Math.min(Math.max(blurAmount, 1), 3) * 2}` : '';\n\n  return (\n    <div className={`relative ${heightClasses[height]} overflow-hidden ${className}`}>\n      {/* Background Media */}\n      {mediaType === 'video' ? (\n        <video\n          src={src}\n          autoPlay\n          loop\n          muted\n          className={`absolute w-full h-full ${positionClasses[position]} ${sizeClasses[size]} ${blurClass} pointer-events-none select-none`}\n          style={{ opacity: opacity / 100 }}\n        />\n      ) : (\n        <img\n          src={src}\n          alt=\"background\"\n          className={`absolute w-full h-full ${positionClasses[position]} ${sizeClasses[size]} ${blurClass} pointer-events-none select-none`}\n          style={{ opacity: opacity / 100 }}\n        />\n      )}\n\n      {/* Dark Overlay */}\n      {darkOverlay && (\n        <div \n          className=\"absolute inset-0 bg-black pointer-events-none\"\n          style={{ opacity: darkOverlayOpacity / 100 }}\n        />\n      )}\n\n      {/* Content */}\n      <div className=\"relative z-10 h-full flex flex-col\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Overlay;\n\n\n\n/*\n<Overlay \n        src={thela} // Use the imported variable here\n        mediaType=\"image\"\n        opacity={30}\n        height=\"screen\"\n        darkOverlay={true}\n        darkOverlayOpacity={20}\n      >\n        {/* Content centered in the middle of the screen \n        <div className=\"flex flex-col justify-center items-center h-full text-center px-4\">\n          <h1 className=\"text-6xl font-bold text-white mb-4\">\n            Manage Your Files Seamlessly<br />Share in a Secure Way\n          </h1>\n          {/* No buttons here, as requested \n        </div>\n      </Overlay>\n    */",
      "type": "registry:component"
    }
  ]
}